@mixin m-p-all($type, $abbr, $num, $pixel) {
  .bh-#{$abbr}-#{$num} {
    #{$type}: $pixel !important;
  }
}

@mixin m-p-horizontal($type, $abbr, $num, $pixel) {
  .bh-#{$abbr}-#{$num} {
    #{$type}-left: $pixel !important;
    #{$type}-right: $pixel !important;
  }
}

@mixin m-p-vertical($type, $abbr, $num, $pixel) {
  .bh-#{$abbr}-#{$num} {
    #{$type}-top: $pixel !important;
    #{$type}-bottom: $pixel !important;
  }
}

@mixin m-p-right($type, $abbr, $num, $pixel) {
  .bh-#{$abbr}-#{$num} {
    #{$type}-right: $pixel !important;
  }
}

@mixin m-p-bottom($type, $abbr, $num, $pixel) {
  .bh-#{$abbr}-#{$num} {
    #{$type}-bottom: $pixel !important;
  }
}

@mixin m-p-top($type, $abbr, $num, $pixel) {
  .bh-#{$abbr}-#{$num} {
    #{$type}-top: $pixel !important;
  }
}

@mixin m-p-left($type, $abbr, $num, $pixel) {
  .bh-#{$abbr}-#{$num} {
    #{$type}-left: $pixel !important;
  }
}

//创建内外边距
@mixin make-m-p($type, $abbr, $num, $pixel) {
  @include m-p-all($type, $abbr, $num, $pixel);
  @include m-p-horizontal($type, #{$abbr}h, $num, $pixel);
  @include m-p-vertical($type, #{$abbr}v, $num, $pixel);
  @include m-p-top($type, #{$abbr}t, $num, $pixel);
  @include m-p-bottom($type, #{$abbr}b, $num, $pixel);
  @include m-p-left($type, #{$abbr}l, $num, $pixel);
  @include m-p-right($type, #{$abbr}r, $num, $pixel);
}


//创建宽度
@mixin make-width($num, $pixel) {
  .bh-w-#{$num} {
    width: #{$pixel} !important;
  }
}





//创建颜色
@mixin color-font($color, $colorType, $level){
  @if $level{
    .bh-color-#{$colorType}-#{$level}{
      color: $color !important;
    }
  }@else {
    .bh-color-#{$colorType}{
      color: $color !important;
    }
  }

}

@mixin color-bg($color, $colorType, $level){
  @if $level{
    .bh-bgColor-#{$colorType}-#{$level}{
      background-color: $color !important;
    }
  }@else {
    .bh-bgColor-#{$colorType}{
      background-color: $color !important;
    }
  }
}

@mixin color-border($color, $colorType, $level){
  @if $level{
    .bh-bColor-#{$colorType}-#{$level}{
      border-color: $color !important;
    }
  }@else {
    .bh-bColor-#{$colorType}{
      border-color: $color !important;
    }
  }
}


@mixin make-color($colorType){
  @for $i from 1 through 5 {
    @if $i == 1{
      @include color-font(getColorByType($colorType, 1), $colorType, false);
      @include color-bg(getColorByType($colorType, 1), $colorType, false);
      @include color-border(getColorByType($colorType, 1), $colorType, false);
    }@else {
      @include color-font(getColorByType($colorType, $i), $colorType, $i);
      @include color-bg(getColorByType($colorType, $i), $colorType, $i);
      @include color-border(getColorByType($colorType, $i), $colorType, $i);
    }
  }
}